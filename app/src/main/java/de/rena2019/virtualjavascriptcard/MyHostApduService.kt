package de.rena2019.virtualjavascriptcard

import android.nfc.cardemulation.HostApduService
import android.os.Bundle
import android.util.Log

class MyHostApduService: HostApduService() {
    private var countCommand = -1;
    override fun processCommandApdu(commandApdu: ByteArray?, extras: Bundle?): ByteArray {
        Log.i("APDU IN", commandApdu!!.toHexString())
        var rsp = "";
        countCommand++
        when (countCommand) {
            0 -> {
                rsp = "6F23840E325041592E5359532E4444463031A511BF0C0E610C4F07A0000000041010870101"
            }
            1 -> {
                rsp = "6f1a8407a0000000041010a50f500d4d434849502042617365203639"
            }
            2 -> {
                //rsp = "771a8202588094140801010010010101180101001802020020010200"
                rsp = "771a8202598094140801010010010101180101001802020020010200"
            }
            3->{
                rsp = "707D9F6C0200019F62060000003800009F630600000000E0E0563C42353431333333303038393630313033345E455445432F504159504153535E31343132323031303030303030303030303030303030303030303030309F6401039F6502000E9F66020E709F6B135413330089601034D14122019000990000000F9F670103"
            }
            4->{
                //00000000
                //00000000
                //42 03
                //5E 03
                //1F 03
                // No CVM
                //rsp = "7081AB57115413330089601034D251220101234091725A0854133300896010345F200C455445432F504159504153535F24032512315F25030401015F280200565F3401018C219F02069F03069F1A0295055F2A029A039C019F37049F35019F45029F4C089F34038D0C910A8A0295059F37049F4C088E0C00000000000000005E031F039F0702FF009F080200029F0D0500000000009F0E0500000000009f0f0500000000009f420209789F4A0182"
                // REQUIRE PIN ONLINE
                rsp = "7081AB57115413330089601034D251220101234091725A0854133300896010345F200C455445432F504159504153535F24032512315F25030401015F280200565F3401018C219F02069F03069F1A0295055F2A029A039C019F37049F35019F45029F4C089F34038D0C910A8A0295059F37049F4C088E0C000000000000000042031F039F0702FF009F080200029F0D0500000000009F0E0500000000009f0f0500000000009f420209789F4A0182"
            }
            5->{
                rsp = "7081A08F01FA9F3201039204D35241079081901889B997E6FCE84B4AE7AB87431CBDB3DF8C1D5A55A7F60D2959AF3A5104E7588317ED74086668CF1A054784F7493C6D747FA796EC14D333A68EC7E00862959A0BD0F0482080B71AC1B7625B1B8B1F35A6691999BA78F592E23F95E99609D108CF1C0E308A8BF64FBDE837D3CE138A50DC50AF4B41EE53D98A11B6A81DDD44CC430C1EF3BB9D1D75A02FAA9C814AFC58"
            }
            6->{
                rsp = "707293700EE21A7C4546752CDA0110DA8BA5A8BBD96A06D609105AB06DFE2510DBA479A237D8E594EA490B809557A55C6E97A49A7467D2A1F94B17D44EE82FDF8DC46A0D03F583851507A5CD375607123763AFC6320136DE415C40027F9CB80DE992307872B490640BCBFA7314FFCFAE8E2B758E"
            }
            7->{
                rsp = "70219F4701039F481A0000000000000006600000000000000000000000000000000055"
            }
            8->{
                rsp = "70739F4670382A67DA4DF1B65336FCA96CA6981D87C6DD8FCF730ABB0E838CD5433727255B51F343ED6ADD72A278B10AF093B2EB9450ED91E5D4D388C64280F0619FA213672156097E31484BE52ADAB25F16ABFD1F872CB01F4207E2F1F1AAFD8FF48E5FAA0ACAEB4C080934C987A4D51DA62E208A"
            }
            9->{
                rsp = "77299f2701809f360200019f26081c53538c82d8fad39f10120110a00009240000010200000000000000ff"
            }
        }
        //9F02 06
        //9F03 06
        //9F1A 02
        //  95 05
        //5F2A 02
        //  9A 03
        //  9C 01
        //9F37 04
        //9F35 01
        //9F45 02
        //9F4C 08
        //9F34 03
        //80ae80002b00000000020000000000000000760480008001098621110100 cd034ea9 22000000000000000000001f0302
        //80ae80002b00000000020000000000000000760480008001098621110100 92b17d3b 22000000000000000000001f030200
        //80ae80002b00000000020000000000000000768080008001098621110100 54729a54 22000000000000000000001f030200

        rsp +="9000"
        Log.i("APDU OUT", "$countCommand - $rsp")
        return rsp.decodeHex()
    }

    private fun String.decodeHex(): ByteArray {
        check(length % 2 == 0) { "Must have an even length" }

        return chunked(2)
                .map { it.toInt(16).toByte() }
                .toByteArray()
    }

    private fun ByteArray.toHexString() : String {
        return this.joinToString("") {
            java.lang.String.format("%02x", it)
        }
    }

    override fun onDeactivated(reason: Int) {
        countCommand = -1
    }

}